DOTFILES_PATH=${XDG_DATA_HOME:-$HOME/.local/share}/chezmoi

### Locale ###
export LANG=en_US.UTF-8
export LANGUAGE=en_US
export LC_TIME=en_IE.UTF-8
export LC_COLLATE=pl_PL.UTF-8

### Shell settings ###
export VISUAL=vim             # default editor
bindkey -e                    # use emacs keybindings
setopt INTERACTIVE_COMMENTS   # allow comments in interactive shell
setopt NUMERIC_GLOB_SORT      # sort filenames numerically
setopt LONG_LIST_JOBS         # show PID when listing jobs
autoload -Uz compinit         # enable completions
compinit
zstyle ':completion:*' menu select
autoload -Uz bracketed-paste-magic
zle -N bracketed-paste bracketed-paste-magic

### History settings ###
HISTFILE=$HOME/.zsh_history    # enable history saving on shell exit
HISTSIZE=50000                 # lines of history to maintain memory
SAVEHIST=1000000               # lines of history to maintain in history file.
setopt APPEND_HISTORY          # append rather than overwrite history file.
setopt SHARE_HISTORY           # cross-session history sharing
setopt HIST_EXPIRE_DUPS_FIRST  # allow dups, but expire old ones when I hit HISTSIZE
setopt EXTENDED_HISTORY        # save timestamp and runtime information
setopt HIST_IGNORE_SPACE       # don't save commands starting with space

### Local settings ###
# Load OS-specific settings
UNAME="$(uname -s)"
case "${UNAME}" in
    Linux*)     source ${DOTFILES_PATH}/.zshrc-linux.zsh;;
    Darwin*)    source ${DOTFILES_PATH}/.zshrc-macos.zsh;;
    CYGWIN*)    source ${DOTFILES_PATH}/.zshrc-cygwin.zsh;;
    *)          echo "Loading Michal's zsh settings: Unrecognized OS";;
esac

### Aliases ###
alias history='fc -fnl 1'
source ${DOTFILES_PATH}/.aliases.sh
source ${DOTFILES_PATH}/.xdg.sh

# Load local settings if .zshrc-local file exists
[[ ! -f ~/.zshrc-local ]] || source ~/.zshrc-local

### Zsh plugins ###
### Starship.rs prompt ###
eval "$(starship init zsh)"

# zsh-syntax-highlighting
source ${DOTFILES_PATH}/plugins/zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.plugin.zsh

# zsh-history-substring-search
source ${DOTFILES_PATH}/plugins/zsh/zsh-history-substring-search/zsh-history-substring-search.zsh
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down
bindkey "$terminfo[kcuu1]" history-substring-search-up
bindkey "$terminfo[kcud1]" history-substring-search-down

# zsh-autosuggestions
source ${DOTFILES_PATH}/plugins/zsh/zsh-autosuggestions/zsh-autosuggestions.zsh
ZSH_AUTOSUGGEST_STRATEGY=(history completion)

# fzf-tab
source ${DOTFILES_PATH}/plugins/zsh/zsh-fzf-tab/fzf-tab.plugin.zsh

# atuin history
eval "$(atuin init zsh --disable-up-arrow)"

# command-not-found
source ${DOTFILES_PATH}/plugins/zsh/command-not-found.plugin.zsh

### Virtualenvwrapper settings ###
# Try different possible locations for virtualenvwrapper
VIRTUALENV_WRAPPER_LOCATIONS=(
    "/usr/share/virtualenvwrapper/virtualenvwrapper_lazy.sh"      # Debian/Ubuntu
    "$(command -v virtualenvwrapper_lazy.sh 2>/dev/null)"         # If in PATH
)

VIRTUALENV_WRAPPER_SCRIPT=""
for location in "${VIRTUALENV_WRAPPER_LOCATIONS[@]}"; do
    if [[ -f "$location" ]]; then
        VIRTUALENV_WRAPPER_SCRIPT="$location"
        break
    fi
done

if [[ -n "$VIRTUALENV_WRAPPER_SCRIPT" ]]; then
    source "$VIRTUALENV_WRAPPER_SCRIPT"
    export DISABLE_VENV_CD=1
    export VIRTUALENVWRAPPER_VIRTUALENV=$(command -v virtualenv)
    export VIRTUALENVWRAPPER_PYTHON=$(command -v python3)
else
    echo "Warning: virtualenvwrapper not found. Install with: pip install virtualenvwrapper"
fi

